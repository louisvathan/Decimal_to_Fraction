#:kivy 2.0.0
#:import Clipboard kivy.core.clipboard.Clipboard
<MyRoot>:
	
	output_label: output_label
	decimal_input: decimal_input
	denominator_input: denominator_input
	rounding_input: rounding_input
	middle_condition_input: middle_condition_input
	
	BoxLayout:
		orientation : "vertical"
		Label:
			text: "Decimal to Fraction Convertor"
			font_size: self.width/20
			color: 0.92, 0.45, 0
		GridLayout:
			rows:1
			cols:2
			Label:
				text: "Enter Decimal Value"
				font_size: self.width/20
			TextInput:
				id: decimal_input
				input_type: "number"
				helper_text_mode: "on-focus"
				on_text_validate:  root.operation()
				hint_text: "e.g. 0.15625"
				font_size: self.width/20
				multiline: False
				input_filter: "float"
				halign: "center"
				padding_y: [self.height / 2.0 - (self.line_height / 2.0) * len(self._lines), 0]
		GridLayout:
			rows:1
			cols: 2
			Label:
				text: "Denominator"
				font_size: self.width/20
			Spinner:
				id: denominator_input
				text: "64"
				font_size: self.width/20
				values: ["64", "32", "16", "8", "4", "2", "1"]
				on_text: root.denominator_select(self.text)
		GridLayout:
			rows:1
			cols:2
			Label:
				text: "Rounding"
				font_size: self.width/20
			Spinner:
				id: rounding_input
				text: "Round to Nearest Fraction"
				font_size: self.width/20
				values: ["Round to Nearest Fraction", "Round to Next Fraction", "Round to Previous Fraction", "No Rounding"]
				on_text: root.rounding_select(self.text)
		GridLayout:
			rows:1
			cols:2
			Label:
				text: "Middle Condition"
				font_size: self.width/20
			Spinner:
				id: middle_condition_input
				text: "to Next"
				font_size: self.width/20
				values: ["to Next", "to Previous"]
				on_text: root.middle_condition_select(self.text)
		BoxLayout:
			orientation: 'horizontal'
			Label:
				id: output_label
				text: "-"
				size_hint_x: 0.85
				font_size: self.width/20
			Button:
				size_hint_x: 0.15
				background_normal: 'copy_to_clipboard.png'
				background_down: 'copy_to_clipboard_white.png'
				on_press: root.copy()
				on_release: Clipboard.copy(output_label.text)